<!-- Launches: ardrone_autonomy driver; front and bottom camera rectification and visualization; -->
<launch>
	<!-- General ROS tools -->
	<!-- 
	<group ns="ROS_tools">
		<node pkg="rxtools" type="rxconsole" name="rxconsole_node"></node>   
		<node pkg="rqt_graph" type="rqt_graph" name="rqt_graph_node"></node>
	</group>
	-->
	
	<arg name="drone_id_namespace" default="drone0" />
	<group ns="$(arg drone_id_namespace)">
		<!-- Ardrone driver node -->
		<node name="ardrone_driver" pkg="ardrone_autonomy" type="ardrone_driver" output="screen" clear_params="true" args="-ip $(arg drone_ip)">

			<!-- To understand the ardrone_autonomy and ardrone configuration parameters, read the documentation at:
				[*] see https://github.com/AutonomyLab/ardrone_autonomy/wiki/AR-Drone-Parameters
			     	[*] check ardrone developer's guide for information on each of these parameters,
					website: https://projects.ardrone.org/projects/show/ardrone-api/ 		-->


			<!-- related to WiFi bandwidth usage -->
			<!-- Enables the automatic bitrate control of the video stream. Enabling this configuration will reduce the bandwith
used by the video stream under bad Wi-Fi conditions, reducing the commands latency
Possible values:
VBC_MODE_DISABLED = 0,  /*<! no video bitrate control */
VBC_MODE_DYNAMIC = 1,       /*<! video bitrate control active */
VBC_MANUAL = 2              /*<! video bitrate control active */
 			-->
			<param name="bitrate_ctrl_mode" value="0" /> <!-- default = 0 -->
			<!-- Maximum bitrate that the device can decode. This is set as the upper bound for drone bitrate values. When using the bitrate control mode in "VBC_MANUAL", this maximum bitrate is ignored. Note : When
using the bitrate control mode in "VBC_MODE_DISABLED", the bitrate is fixed to this maximum bitrate. -->
			<param name="max_bitrate" value="1000" /> <!-- default = 1000 -->
			<!-- When using the bitrate control mode in "VBC_MANUAL", sets the bitrate of the video transmis-
sion (kilobits per second) -->
			<param name="bitrate" value="1000" /> <!-- default = 1000 -->
			
			
			
			<param name="navdata_demo" value="0" />

			<!-- outdoor: 1:outdoors flight, activates wind estimation 0:indoors flight
                             flight_without_shell: 1: outdoors hull 0:indoors hull 
				[Julio2013] Ensayos IBVS Controller: outdoor=1 flight_without_shell=0 
				[ROBOT2013] Ensayos Traj Controller: outdoor=1 flight_without_shell=0 
				[>=Aug2013] Ensayos IBVS Controller: outdoor=1 flight_without_shell=1 
				[ Indoors ] Ensayos Traj Controller: outdoor=0 flight_without_shell=0
				[ Outdoors] Ensayos Traj Controller: outdoor=1 flight_without_shell=1 -->
			<param name="outdoor" value="0" />
			<param name="flight_without_shell" value="0" />

			<!-- Maximum and minimum altitude, minimum altitude is to be left to the default value (advised on SDK) -->
			<param name="altitude_max" value="7000" />		<!-- default: 3000 -->
			<!-- <param name="altitude_min" value="50" /> -->	<!-- default: 50 -->
			
			<param name="euler_angle_max" value="0.21" /> 		<!-- 0.21 rad     -->
			<param name="control_vz_max" value="1000" />		<!--  700 mm/seg  -->
			<param name="control_yaw" value="1.75" />		<!-- 1.75 rad/seg -->
			
 			<!-- outdoors flight (outdoor==1) -->
			<param name="outdoor_euler_angle_max" value="0.21" /> 	<!-- 0.35 rad     -->
			<param name="outdoor_control_vz_max" value="1000" />	<!-- 1000 mm/seg  -->
			<param name="outdoor_control_yaw" value="1.75" />	<!-- 3.50 rad/seg -->

			<!-- indoors flight  (outdoor==0) -->
			<param name="indoor_euler_angle_max" value="0.21" />  	<!-- 0.21 rad     -->
			<param name="indoor_control_vz_max" value="1000" />	<!--  700 mm/seg  -->
			<param name="indoor_control_yaw" value="1.75" />	<!-- 1.75 rad/seg -->
			
			
			<!-- Detection parameters which I currently don't care about
			<param name="detect_type" value="10" />
			<param name="enemy_colors" value="3" />
			<param name="detections_select_h" value="32" />
			<param name="detections_select_v_hsync" value="128" />
			<param name="enemy_without_shell" value="0" />
			    -->

			<!-- https://github.com/AutonomyLab/ardrone_autonomy#other-parameters -->
			<param name="do_imu_caliberation" value="false" />
			<param name="tf_prefix" value="" />
			<param name="realtime_navdata" value="true" />
			<!-- Covariance Values (3x3 matrices reshaped to 1x9)-->
			<rosparam param="cov/imu_la">[0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1]</rosparam>
			<rosparam param="cov/imu_av">[1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]</rosparam>
			<rosparam param="cov/imu_or">[1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 100000.0]</rosparam>
			
			<!-- MAC lock command -->
			<!-- jespestana-XPS	74:E5:0B:AA:E4:38 -->
			<!-- toshiba-joselu	84:A6:C8:4E:F6:79 -->
			<!-- <param name="owner_mac" value="74:E5:0B:AA:E4:38" /> -->
			<param name="owner_mac" value="84:A6:C8:4E:F6:79" />
			<!-- <param name="owner_mac" value="00:00:00:00:00:00" /> -->
		</node>

		<!-- Ardrone front camera image rectification -->
		<!--
		<node ns="/$(arg drone_id_namespace)/ardrone/front" pkg="image_proc" type="image_proc" name="image_proc" />
		-->
		

		<!-- Ardrone front camera image visualization 
    		<node ns="ardrone/front" pkg="image_view" type="image_view" name="image_view" >
      			<remap from="image" to="image_rect_color" />
		</node> -->
		

		<!-- Ardrone bottom camera image rectification 
		<node ns="ardrone/bottom" pkg="image_proc" type="image_proc" name="image_proc" />
		-->

		<!-- Ardrone bottom camera image visualization 
    		<node ns="ardrone/bottom" pkg="image_view" type="image_view" name="image_view" >
      			<remap from="image" to="image_rect_color" />
		</node>
		-->
	</group>
</launch>
